{{ $envUser := env "NATS_USER" }}
{{ $envPassword := env "NATS_PASSWORD" }}
{{ $user := or $envUser "ruser" }}
{{ $password := or $envPassword "T0pS3cr3t" }}

# Client port of 4222 on all interfaces
port: 4222

# HTTP monitoring port
http: 0.0.0.0:8222

authorization {
  user: {{ $user }}
  password: "{{ $password }}"
  timeout:  2
}

# This is for clustering multiple servers together.
cluster {

  # Route connections to be received on any interface on port 6222
  port: 6222

  # Routes are protected, so need to use them with --routes flag
  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222
  authorization {
    user: {{ $user }}
    password: "{{ $password }}"
    timeout: 2
  }

  # Routes are actively solicited and connected to from this server.
  # This Docker image has none by default, but you can pass a
  # flag to the gnatsd docker image to create one to an existing server.
  routes = [{{ range service "nats" }}
    nats-route://{{ $user }}:{{ $password }}@{{ .Address }}:{{ .Port }}{{ end }}
  ]
}
